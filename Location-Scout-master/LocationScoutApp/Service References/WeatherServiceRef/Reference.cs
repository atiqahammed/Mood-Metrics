//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocationScoutApp.WeatherServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherServiceRef.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/get_maxTempData", ReplyAction="http://tempuri.org/IWeatherService/get_maxTempDataResponse")]
        string get_maxTempData(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/get_maxTempData", ReplyAction="http://tempuri.org/IWeatherService/get_maxTempDataResponse")]
        System.Threading.Tasks.Task<string> get_maxTempDataAsync(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/get_minTempData", ReplyAction="http://tempuri.org/IWeatherService/get_minTempDataResponse")]
        string get_minTempData(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/get_minTempData", ReplyAction="http://tempuri.org/IWeatherService/get_minTempDataResponse")]
        System.Threading.Tasks.Task<string> get_minTempDataAsync(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/get_rainFallData", ReplyAction="http://tempuri.org/IWeatherService/get_rainFallDataResponse")]
        string get_rainFallData(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/get_rainFallData", ReplyAction="http://tempuri.org/IWeatherService/get_rainFallDataResponse")]
        System.Threading.Tasks.Task<string> get_rainFallDataAsync(string zipcode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : LocationScoutApp.WeatherServiceRef.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<LocationScoutApp.WeatherServiceRef.IWeatherService>, LocationScoutApp.WeatherServiceRef.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string get_maxTempData(string zipcode) {
            return base.Channel.get_maxTempData(zipcode);
        }
        
        public System.Threading.Tasks.Task<string> get_maxTempDataAsync(string zipcode) {
            return base.Channel.get_maxTempDataAsync(zipcode);
        }
        
        public string get_minTempData(string zipcode) {
            return base.Channel.get_minTempData(zipcode);
        }
        
        public System.Threading.Tasks.Task<string> get_minTempDataAsync(string zipcode) {
            return base.Channel.get_minTempDataAsync(zipcode);
        }
        
        public string get_rainFallData(string zipcode) {
            return base.Channel.get_rainFallData(zipcode);
        }
        
        public System.Threading.Tasks.Task<string> get_rainFallDataAsync(string zipcode) {
            return base.Channel.get_rainFallDataAsync(zipcode);
        }
    }
}
