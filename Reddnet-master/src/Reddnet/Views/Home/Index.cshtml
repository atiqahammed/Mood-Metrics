@model BlogCoreEngine.ViewModels.SearchViewModel
@using BlogCoreEngine.Core.Entities;

@inject BlogCoreEngine.Core.Interfaces.IAsyncRepository<Author> authorRepository;

@{
    var TopToday = Model.Posts.OrderByDescending(x => x.Views).Take(3).Where(x => x.Created.Date == DateTime.Today);

    Author currentUser = null;
    if (User.Identity.IsAuthenticated)
    {
        currentUser = await authorRepository.GetById(User.Identity.GetAuthorId());
    }
}


<div style="width: 100%;">
    @if (!Model.Posts.Any())
    {
        <div class="container" style="margin-top: 26px; min-width: 750px">
            <h1>No Posts found!</h1>
        </div>
    }
    else
    {
        @foreach (var post in Model.Posts.Take(20))
        {
            await Html.RenderPartialAsync("_PostPartial", post);
        }
    }
</div>

<div class="column-c" style="width: 20%; margin-left: 30px;">

    @if (User.Identity.IsAuthenticated)
    {
        <div class="container" style="height: 200px;">
            <img style="height: 80px; margin-bottom: 10px; border-radius: 50px" src="data:image;base64,@System.Convert.ToBase64String(currentUser.Image)" />
            <h2 style="text-align: center"><strong>@currentUser.Name</strong></h2>

            <p style="margin-top: 20px; font-size: 13px; color: gray;">Posts: @currentUser.Posts.Count()</p>
            <p style="margin-top: 3px; font-size: 13px; color: gray;">Comments: @currentUser.Comments.Count()</p>
        </div>
    }

    <div class="container" style="height: 200px; margin-top: 15px">
        <h1 class="bubble">Top 5 Blogs</h1>

        @foreach (var blog in Model.Blogs.OrderByDescending(x => x.Posts.Count).Take(5))
        {
            <a class="clickLink" asp-controller="Blog" asp-action="View" asp-route-id="@blog.Id">@blog.Name - @blog.Posts.Count Posts</a>
        }
    </div>
</div>







